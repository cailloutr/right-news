plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.cailloutr.rightnews'
    compileSdk 33

    defaultConfig {
        applicationId "com.cailloutr.rightnews"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "API_KEY", API_KEY)

        testInstrumentationRunner "com.cailloutr.rightnews.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    packagingOptions {
        resources.merges.add("META-INF/NOTICE.md")
        resources.merges.add("META-INF/LICENSE.md")
        resources.merges.add("META-INF/LICENSE-notice.md")
    }

    testOptions {
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }
    }
}


// Allow references to generated code
dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // SwipeRefresh Layout
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01")

    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'

    // ViewPager's dots indicators
    implementation("com.tbuonomo:dotsindicator:4.3")

    // Navigation Component
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")

    // Coil
    implementation("io.coil-kt:coil:$coil_version")

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    // Retrofit
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")


    testImplementation 'junit:junit:4.13.2'
    testImplementation("com.google.truth:truth:$google_truth_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    testImplementation("androidx.arch.core:core-testing:2.2.0")
    testImplementation "io.mockk:mockk-android:${mockkVersion}"
    testImplementation "io.mockk:mockk-agent:${mockkVersion}"
    testImplementation 'app.cash.turbine:turbine:0.12.1'

    // Core library
    implementation  'androidx.test:core:1.5.0'

    androidTestImplementation "junit:junit:4.13.2"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'com.google.truth:truth:1.1.3'

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"

    androidTestImplementation 'com.github.tmurakami:dexopener:2.0.5'
    androidTestImplementation "io.mockk:mockk-android:${mockkVersion}"
    androidTestImplementation "io.mockk:mockk-agent:${mockkVersion}"

    androidTestImplementation 'org.mockito:mockito-android:3.2.4'
//    androidTestImplementation "org.mockito:mockito-core:3.2.4"
//    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.3'

    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    debugImplementation("androidx.fragment:fragment-testing:$fragment_version")

}
kapt {
    correctErrorTypes = true
}